{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","styles","searchbar","searchForm","e","preventDefault","toast","error","type","button","label","aria-label","name","autoComplete","autoFocus","onChange","currentTarget","value","trim","input","placeholder","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","event","target","window","addEventListener","this","removeEventListener","createPortal","overlay","onClick","content","children","Component","ImageGalleryItem","photo","item","image","src","webformatURL","data-source","largeImageURL","alt","tags","defaultProps","id","ImageGallery","photos","imageGallery","map","Button","allyProps","Load","loader","color","height","width","timeout","App","setPhotos","setError","loading","setLoading","page","setPage","showModal","largePhoto","setLargePhoto","KEY","useRef","URL","useEffect","axios","get","current","then","response","data","hits","catch","finally","toggleModal","console","log","normalizedSearchQuery","toLowerCase","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.788f6236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__1kmEh\",\"image\":\"ImageGalleryItem_image__1gCRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1Oe8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2pNTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2Cr1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2zZpz\",\"searchForm\":\"Searchbar_searchForm__2nG4x\",\"button\":\"Searchbar_button__30jDx\",\"buttonLabel\":\"Searchbar_buttonLabel__HCbnY\",\"input\":\"Searchbar_input__3Yka0\"};","import React, { useState } from 'react';\r\nimport styles from './Searchbar.module.css';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const handleSearchChange = e => setSearchQuery(e.currentTarget.value.trim());\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        if (searchQuery === '') {\r\n            toast.error('Empty request');\r\n            return;\r\n        }\r\n        onSubmit(searchQuery);\r\n        setSearchQuery('');\r\n    };\r\n\r\n    return (\r\n            <header className={styles.searchbar}>\r\n            <form className={styles.searchForm}\r\n            onSubmit={handleSubmit}\r\n            >\r\n                    <button type=\"submit\" className={styles.button}>\r\n                        <span className={styles.label} aria-label='Search'><ImSearch />\r\n                         </span>\r\n                    </button>\r\n\r\n                    <input\r\n                        type='text'\r\n                        name='searchbar'\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        onChange={handleSearchChange}\r\n                        value={searchQuery}\r\n                        className={styles.input}\r\n                        placeholder='Search images and photos'\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n}","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return createPortal(\r\n        <div className={styles.overlay} onClick={this.handleBackdropClick}>\r\n          <div className={styles.content}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n   );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ photo, onClick }) {\r\n    return (\r\n    <>\r\n      <li className={styles.item}\r\n        onClick={onClick}>\r\n        <img className={styles.image}\r\n          src={photo.webformatURL}\r\n          data-source={photo.largeImageURL}\r\n          alt={photo.tags}/>\r\n        </li>\r\n        </>\r\n  )\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  largeImageURL: '',\r\n  webformatURL: '',\r\n  tags: '',\r\n  id: ''\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string,\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nfunction ImageGallery({ photos, onClick } ) {\r\n    return (\r\n      <ul className={styles.imageGallery}>\r\n        {photos.map(( photo ) => (<ImageGalleryItem key={photo.id} onClick={() => onClick(photo)}\r\n          photo={photo}\r\n          ></ImageGalleryItem>))}\r\n      </ul> \r\n    )\r\n}\r\n        \r\nImageGallery.defaultProps = {\r\n  photos: [],\r\n  children: \"\",\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  photos: PropTypes.array,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n    <button type=\"button\" className={styles.button} onClick={onClick} {...allyProps}>\r\n    Load more{children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css';\r\n\r\nfunction Load() {\r\n    return (\r\n        <Loader className={styles.loader}\r\n            type=\"ThreeDots\"\r\n            color=\"#3f51b5\"\r\n            height={45}\r\n            width={45}\r\n            timeout={6000}\r\n        />)\r\n};\r\n\r\nexport default Load;","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Searchbar from './Searchbar/Searchbar';\nimport Modal from './Modal/Modal'\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Load from './Loader/Loader';\nimport '../stylesheets/normalize.css';\nimport '../stylesheets/main.css';\nimport { ToastContainer } from \"react-toastify\";\n\nexport default function App() {\n  const [photos, setPhotos] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [largePhoto, setLargePhoto] = useState('');\n\n  const KEY = useRef('19150755-18ebc4fb910ab3d1add5e1d5a');\n  const URL = useRef('https://pixabay.com/api/');\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n       .get(`${URL.current}?q=${searchQuery}&page=${page}&key=${KEY.current}&image_type=photo&orientation=horizontal&per_page=12`)\n      .then(response => response.data.hits).then(setPhotos)\n      .catch(error=> setError(error))\n      .finally(() => setLoading(true));\n  }, [searchQuery, page]);\n  \n  const handleSearchSubmit = searchQuery => {\n    const normalizedSearchQuery = searchQuery.toLowerCase().trim();\n    setSearchQuery(normalizedSearchQuery);\n  };\n\n  const onButtonClick = e => {\n    e.preventDefault();\n    setPage(page + 1);\n  };\n   \n  const toggleModal = (photo) => {\n    //setShowModal(!showModal );\n    console.log('largeImageURL', photo.largeImageURL);\n    console.log('tags', photo.tags);\n    setLargePhoto(photo);\n  };\n\n  return (\n    <>\n      <Searchbar\n       onSubmit={handleSearchSubmit}\n      />\n      {error && <h1>Error, try again later</h1>}\n\n      {showModal &&\n          <Modal onClose={toggleModal}>\n        <img src={largePhoto.largeImageURL} alt={largePhoto.tags}\n        />\n        </Modal>}\n      \n      {photos.length > 0 ?\n          <ImageGallery\n              photos={photos}\n        onClick={toggleModal}\n        >\n        </ImageGallery> : null}\n      \n      {loading &&\n          <Load \n          type=\"ThreeDots\"\n          color=\"#3f51b5\"\n          height={45}\n          width={45}\n          timeout={6000}\n          />}\n      \n        {photos.length >= 11 ?\n          <Button\n            aria-label='Load more'\n          onClick={onButtonClick}\n        >\n          </Button> : null}\n\n        <ToastContainer autoClose={2000}/>\n    </>\n  )\n}\n\n/*class App extends Component {\n  state = {\n    photos: [],\n    searchQuery: '',\n    page: 1,\n    showModal: false,\n    loading: false,\n    key: '19150755-18ebc4fb910ab3d1add5e1d5a',\n    url: 'https://pixabay.com/api/',\n    error: null,\n    status: \"idle\",\n  };\n  \n  componentDidMount() {\n    this.setState({ loading: true });\n    axios\n      .get(`${this.state.url}?page=${this.state.page}&key=${this.state.key}&image_type=photo&orientation=horizontal&per_page=12`)\n      .then(response => this.setState({ photos: response.data.hits }))\n      .catch(error=> this.setState({error}))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextSearch = this.state.searchQuery;\n    const prevSearch = prevState.searchQuery;\n    const nextPage = this.state.page;\n    const prevPage = prevState.page;\n\n    if (nextSearch !== prevSearch) {\n      this.setState({ loading: true, photos: []});\n      \n      axios\n          .get(`${this.state.url}?q=${this.state.searchQuery}&page=${this.state.page}&key=${this.state.key}&image_type=photo&orientation=horizontal&per_page=12`)\n          .then(response => this.setState({ photos: response.data.hits }\n          ))\n          .catch(error=> this.setState({error}))\n          .finally(() => this.setState({ loading: false }));\n      \n    }\n    if (nextPage !== prevPage) {\n      this.setState({ loading: true });\n\n        axios\n          .get(`${this.state.url}?q=${this.state.searchQuery}&page=${this.state.page}&key=${this.state.key}&image_type=photo&orientation=horizontal&per_page=12`)\n          .then(response => this.setState({ photos: [...prevState.photos, ...response.data.hits] }))\n          .catch(error=> this.setState({error}))\n          .finally(() => { this.setState({ loading: false }); window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth', }) });\n    }\n  };\n\n  toggleModal = (largeImageURL) => {\n    this.setState(({ showModal }) => ({showModal: !showModal}));\n    this.setState({ largeImage: largeImageURL });\n  };\n\n  onButtonClick = e => {\n    e.preventDefault();\n    this.setState(\n      { page: this.state.page + 1 }\n    );\n  };\n\n  handleSearchSubmit = searchQuery => {\n    const normalizedSearchQuery = searchQuery.toLowerCase().trim();\n    this.setState({ searchQuery: normalizedSearchQuery });\n   };\n \n  render() {\n    const { photos, showModal, largeImage, tags, error } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSearchSubmit}/> \n        {error && <h1>Error, try again later</h1>}\n       \n        {photos.length > 0 ?\n          <ImageGallery\n              photos={photos}\n              onClick={this.toggleModal}>\n          </ImageGallery> : null}\n        \n        {showModal &&\n          <Modal onClose={this.toggleModal}>\n          <img src={largeImage} alt={tags}/>\n          </Modal>}\n\n        {this.state.loading &&\n          <Load \n          type=\"ThreeDots\"\n          color=\"#3f51b5\"\n          height={45}\n          width={45}\n          timeout={6000}\n          />}\n      \n        {photos.length >= 11 ?\n          <Button\n            aria-label='Load more'\n            onClick={this.onButtonClick}>\n          </Button> : null}\n\n        <ToastContainer autoClose={2000}/>\n      </>\n    );\n  }\n}\n\nexport default App;*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1FrEX\",\"content\":\"Modal_content__3zfgL\"};"],"sourceRoot":""}